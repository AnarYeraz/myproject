services:
  api:
    container_name: api2
    build:
      context: ./Gateway
      dockerfile: /DOCKERFILE
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - mynetwork
    depends_on:
      - rabbitmq2
    restart: always

  emailmicroservice:
    container_name: emailmicroservice
    build:
      context: ./EmailMicroservice
      dockerfile: /DOCKERFILE
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - mynetwork
    depends_on:
      - rabbitmq2
    restart: always
  
  smsmicroservice:
    container_name: smsmicroservice
    build:
      context: ./SMSMicroservice
      dockerfile: /DOCKERFILE
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - mynetwork
    depends_on:
      - rabbitmq2
    restart: always
  
  discordmicroservice:
    container_name: discordmicroservice
    build:
      context: ./DiscordMicroservice
      dockerfile: /DOCKERFILE
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - mynetwork
    depends_on:
      - rabbitmq2
    restart: always

  ntstatusdmicroservice:
    container_name: ntstatusdmicroservice
    build:
      context: ./NotificationStatusMicroserviceervice
      dockerfile: /DOCKERFILE
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - mynetwork
    depends_on:
      - rabbitmq2
      - postgres2
    restart: always
    
  rabbitmq2:
    image: "rabbitmq:management"
    container_name: rabbitmq2
    restart: always
    networks:
      - mynetwork 
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "15672:15672"
    volumes:
      - rabbitmq2_data:/var/lib/rabbitmq

  postgres2:
    image: postgres:15
    container_name: postgres2
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    networks:
      - mynetwork
    ports:
      - "5433:5432"
    volumes:
      - postgres2_data:/var/lib/postgresql/data
    

volumes:
  rabbitmq2_data:
  postgres2_data:

networks:
  mynetwork:  
    driver: bridge